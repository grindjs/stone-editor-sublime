%YAML 1.2
---
name: Grind Stone
file_extensions: [ stone ]
scope: source.stone
contexts:
  main:
    - match: ''
      push:
        - include: 'scope:text.html.basic'
        - meta_scope: text.html.stone
          pop: true
      with_prototype:

        - match: '{{--'
          captures:
            0: punctuation.definition.comment.begin.stone
          push:
            - meta_scope: comment.block.html.stone
            - match: '--}}'
              scope: punctuation.definition.comment.end.stone
              pop: true
            - match: "--"
              scope: invalid.illegal.bad-comments-or-CDATA.html.stone

        - match: '\{(!!)|(\{\{)-?'
          captures:
            0: punctuation.section.embedded.begin.stone
          push:
            - meta_scope: entity.name.tag.stone
            - meta_content_scope: source.js.stone
            - match: '-?(\}?\}\})|(!!)\}'
              captures:
                0: punctuation.section.embedded.end.stone
                1: punctuation.section.embedded.end.stone
              pop: true
            - include: 'scope:source.js'

        - match: '@\{\{\{?-?'
          captures:
            0: punctuation.section.embedded.ignore.begin.stone
          push:
            - meta_scope: 'scope:text.html.basic'
            - meta_content_scope: 'scope:text.html.basic'
            - match: '-?\}?\}\}'
              captures:
                0: punctuation.section.embedded.ignore.end.stone
                1: punctuation.section.embedded.ignore.end.stone
              pop: true

        - match: '(\s{0}|^)(\@)\b(component|macro|section|slot|yield)\b(?=(|\s*|)\()'
          captures:
            0: punctuation.section.embedded.js
            2: keyword.control.flow.js
            3: keyword.control.flow.js
          push:
            - meta_scope: meta.stone.symbol.js
            - include: directive_args

        - match: '(\s{0}|^)(\@)\b(asset|babel|block|break|coffee|continue|css|debug|dump|each|elseif|extends|for|foreach|forelse|hasSection|if|include|js|layout|less|push|sass|scss|script|set|stack|styl|style|stylus|unless|while)\b(?=(|\s*|)\()'
          captures:
            0: punctuation.section.embedded.js
            2: keyword.control.flow.js
            3: keyword.control.flow.js
          push:
            - include: directive_args

        - match: '(\s{0}|^)(\@)\b(break|continue|else|empty|endblock|endcomponent|endfor|endforeach|endforelse|endif|endmacro|endpush|endsection|endslot|endspaceless|endunless|endwhile|parent|setup|show|spaceless|super)\b'
          scope: custom.compiler.stone.js
          captures:
            0: punctuation.section.embedded.js
            2: keyword.control.flow.js
            3: keyword.control.flow.js
          pop: false

        - match: '(\s{0}|^)(\@)\b([a-zA-Z_]+)\b(?=(|\s*|)\()'
          captures:
            0: support.function
            2: constant.other.inline-data.html
          push:
            - include: directive_args

        - match: '(\s{0}|^)(\@)\b([a-zA-Z_]+)\b(\s?)\b'
          scope: custom.compiler.stone.js
          captures:
            0: support.function
            2: constant.other.inline-data.html
          pop: false

        - match: '(</?)(?!(?:a|abbr|address|area|article|aside|audio|b|bdi|bdo|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|content|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|element|em|embed|fieldset|figcaption|figure|footer|form|h1â€“h6|header|hgroup|hr|html|i|img|input|ins|kbd|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|rtc|ruby|s|samp|script|section|select|shadow|slot|small|source|span|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|tr|track|u|ul|var|video|wbr)\b)([a-zA-Z0-9:-]+)'
          captures:
            1: punctuation.definition.tag.begin.html
            2: entity.name.tag.other.html
          push:
            - meta_scope: meta.tag.other.html
            - match: '(?: ?/)?>'
              scope: punctuation.definition.tag.end.html
              pop: true
            - include: tagged_component

        - match: '(</?)(slot):([a-zA-Z0-9_]+)'
          captures:
            1: punctuation.definition.tag.begin.html
            2: entity.name.tag.other.html
            3: entity.other.attribute-name.html
          push:
            - meta_scope: meta.tag.other.html
            - match: '(?: ?/)?>'
              scope: punctuation.definition.tag.end.html
              pop: true

  directive_args:
    - meta_scope: custom.compiler.stone.js
    - meta_content_scope: source.js.stone
    - match: '(?<=\))'
      pop: true
    - include: 'scope:source.js'

  tagged_component:
    - match: '(?:^|\s+)(([a-zA-Z0-9:\-_.]+)\s*(=)\s*)'
      captures:
        1: meta.attribute-with-value.html
        2: entity.other.attribute-name.html
        3: punctuation.separator.key-value.html
      push:
        - match: '{'
          scope: punctuation.definition.string.begin.js
          set:
            - meta_scope: meta.attribute-with-js-value.html
            - match: '}'
              scope: punctuation.definition.string.end.js
              pop: true
            - include: 'scope:source.js'
        - match: '"'
          scope: punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.html string.quoted.double.html
            - match: '"'
              scope: punctuation.definition.string.end.html
              pop: true
            - include: attribute-entities
        - match: "'"
          scope: punctuation.definition.string.begin.html
          set:
            - meta_scope: meta.attribute-with-value.html string.quoted.single.html
            - match: "'"
              scope: punctuation.definition.string.end.html
              pop: true
            - include: attribute-entities
        - match: ''
          pop: true

    - match: '(?:^|\s+)(([a-zA-Z0-9:\-_.]+))'
      captures:
        1: meta.attribute-with-value.html
        2: entity.other.attribute-name.html
      push:
        - match: ''
          pop: true

    - match: '\{\s*\.{3}-?'
      captures:
        0: punctuation.section.embedded.begin.stone
      push:
        - meta_scope: entity.name.tag.stone
        - meta_content_scope: source.js.stone
        - match: '-?\}'
          captures:
            0: punctuation.section.embedded.end.stone
            1: punctuation.section.embedded.end.stone
          pop: true
        - include: 'scope:source.js'
